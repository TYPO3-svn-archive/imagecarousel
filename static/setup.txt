plugin.tx_imagecarousel_pi1 {

	linkTarget = {$plugin.tx_imagecarousel_pi1.linkTarget}
	extlinkTarget = {$plugin.tx_imagecarousel_pi1.extlinkTarget}
	jQueryNoConflict = {$plugin.tx_imagecarousel_pi1.jQueryNoConflict}
	jsInFooter = {$plugin.tx_imagecarousel_pi1.jsInFooter}
	jsMinify = {$plugin.tx_imagecarousel_pi1.jsMinify}
	jsInline = {$plugin.tx_imagecarousel_pi1.jsInline}
	cssMinify = {$plugin.tx_imagecarousel_pi1.cssMinify}
	disableRecursion = {$plugin.tx_imagecarousel_pi1.disableRecursion}

	jQueryLibrary = {$plugin.tx_imagecarousel_pi1.file.jQueryLibrary}
	jQueryEasing = {$plugin.tx_imagecarousel_pi1.file.jQueryEasing}
	jQueryCaptify = {$plugin.tx_imagecarousel_pi1.file.jQueryCaptify}
	jQueryCarousel = {$plugin.tx_imagecarousel_pi1.file.jQueryCarousel}
	jsScript = {$plugin.tx_imagecarousel_pi1.file.jsScript}
	skin = {$plugin.tx_imagecarousel_pi1.skin}

	vertical = {$plugin.tx_imagecarousel_pi1.vertical}
	rtl = {$plugin.tx_imagecarousel_pi1.rtl}
	random = {$plugin.tx_imagecarousel_pi1.random}
	externalcontrol = {$plugin.tx_imagecarousel_pi1.externalcontrol}
	hidenextbutton = {$plugin.tx_imagecarousel_pi1.hidenextbutton}
	hidepreviousbutton = {$plugin.tx_imagecarousel_pi1.hidepreviousbutton}
	imagewidth = {$plugin.tx_imagecarousel_pi1.imagewidth}
	imageheight = {$plugin.tx_imagecarousel_pi1.imageheight}
	carouselwidth = {$plugin.tx_imagecarousel_pi1.carouselwidth}
	carouselheight = {$plugin.tx_imagecarousel_pi1.carouselheight}

	auto = {$plugin.tx_imagecarousel_pi1.auto}
	stoponmouseover = {$plugin.tx_imagecarousel_pi1.stoponmouseover}
	transition = {$plugin.tx_imagecarousel_pi1.transition}
	transitiondir = {$plugin.tx_imagecarousel_pi1.transitiondir}
	transitionduration = {$plugin.tx_imagecarousel_pi1.transitionduration}
	scroll = {$plugin.tx_imagecarousel_pi1.scroll}
	movewrap = {$plugin.tx_imagecarousel_pi1.movewrap}

	showCaption = {$plugin.tx_imagecarousel_pi1.showCaption}
	animation = {$plugin.tx_imagecarousel_pi1.animation}
	position = {$plugin.tx_imagecarousel_pi1.position}
	speedOver = {$plugin.tx_imagecarousel_pi1.speedOver}
	speedOut = {$plugin.tx_imagecarousel_pi1.speedOut}
	hideDelay = {$plugin.tx_imagecarousel_pi1.hideDelay}
	prefix = {$plugin.tx_imagecarousel_pi1.prefix}
	opacity = {$plugin.tx_imagecarousel_pi1.opacity}
	className = {$plugin.tx_imagecarousel_pi1.className}
	spanWidth = {$plugin.tx_imagecarousel_pi1.spanWidth}

	damCaptionFields = {$plugin.tx_imagecarousel_pi1.damCaptionFields}
	damCaptionObject = TEXT
	damCaptionObject {
		data = register:dam_caption
		ifEmpty {
			data = register:dam_title
		}
	}
	damHrefFields = {$plugin.tx_imagecarousel_pi1.damHrefFields}

	integerWidthWrap {
		wrap = |
	}
	integerHeightWrap {
		wrap = |
	}

	carousel {
		normal {
			image {
				file {
					import.data = register:file
					width.data = register:imagewidth
					height.data = register:imageheight
				}
				imageLinkWrap < tt_content.image.20.1.imageLinkWrap
				imageLinkWrap = 1
				imageHrefWrap {
					enable.data = register:href
					typolink {
						parameter.data = register:href
						title.data = register:caption
						target = {$plugin.tx_imagecarousel_pi1.linkTarget}
						extTarget = {$plugin.tx_imagecarousel_pi1.extlinkTarget}
					}
				}
				params = class="captify"
				altText {
					data = register:caption
					stripHtml = 1
				}
				titleText < .altText
				longdescURL >
				wrap = <li> | </li>
			}
			navigation = TEXT
			navigation {
				value = <a href="#" rev="{register:CURRENT_ID}">{register:CURRENT_ID}</a>
				insertData = 1
			}
			navigationWrap {
				wrap = <div class="jcarousel-control"> | </div>
				required = 1
			}
			stdWrap {
				dataWrap = <div id="{register:key}-outer"><div id="{register:key}" class="{register:class}">###NAVIGATION###<ul> | </ul></div></div>
				required = 1
			}
			childElem = ul,li
		}

		header < .normal

		content < .normal

	}
	_CSS_DEFAULT_STYLE (
.jcarousel-container { position: relative; }
.jcarousel-clip { z-index: 2; padding: 0; margin: 0; overflow: hidden; position: relative; }
.jcarousel-list { z-index: 1; overflow: hidden; position: relative; top: 0; left: 0; margin: 0; padding: 0; }
.jcarousel-list li,.jcarousel-item { float: left; list-style: none; margin: 0 10px 0 0; }
.jcarousel-next { z-index: 3; display: none; }
.jcarousel-prev { z-index: 3; display: none; }
.jcarousel-control { margin-bottom: 10px; text-align: center; }
.jcarousel-control a { font-size: 75%; text-decoration: none; padding: 3px 5px; margin: 0 5px 5px 0; border: 1px solid #fff; color: #eee; background-color: #4088b8; font-weight: bold; }
.jcarousel-control a:hover { color: #eee; }
.jcarousel-control a:focus, .jcarousel-control a:active { color: #eee; outline: none; }
.csc-textpic-intext-left .jcarousel-clip ul { padding: 0; overflow: hidden; position: relative; }
	)
}


#
# For content elements
#
#includeLibs.imagecarousel = EXT:imagecarousel/class.tx_imagecarousel.php
#lib.tt_content_image_20 < tt_content.image.20
#lib.imagecarousel < tt_content.image.20
#lib.imagecarousel {
#  imgMax = 1000
#  rendering.ul {
#    imageStdWrap.dataWrap = <div class="csc-textpic-imagewrap"><ul id="imagecarousel_{field:uid}" class="jcarousel-skin-{$plugin.tx_imagecarousel_pi1.skin}"> | </ul></div>
#    imageStdWrapNoWidth < .imageStdWrap
#    imageRowStdWrap.dataWrap = |
#    imageLastRowStdWrap.dataWrap = |
#    noRowsStdWrap.wrap = |
#    oneImageStdWrap.dataWrap = <li> | </li>
#    imgTagStdWrap.wrap =
#    editIconsStdWrap.wrap = |
#    caption >
#  }
#  renderMethod = ul
#  stdWrap.preUserFunc = tx_imagecarousel->getSlideshow
#}
#tt_content.image.20 >
#tt_content.image.20 = CASE
#tt_content.image.20 {
#  key.field = tx_imagecarousel_activate
#  default < lib.tt_content_image_20
#  1 < lib.imagecarousel
#}
#tt_content.textpic.20 >
#tt_content.textpic.20 = CASE
#tt_content.textpic.20 {
#  key.field = tx_imagecarousel_activate
#  default < tt_content.image.20.default
#  default {
#    text {
#      10 < tt_content.textpic.20.1.text.10
#      20 < tt_content.text.20
#      wrap = <div class="csc-textpic-text"> | </div>
#    }
#  }
#  1 < tt_content.image.20.1
#  1 {
#    text.10 = COA
#    text.10 {
#      if.value = 24
#      if.isGreaterThan.field = imageorient
#      10 =< lib.stdheader
#      10.stdWrap.dataWrap = <div class="csc-textpicHeader csc-textpicHeader-{field:imageorient}"> | </div>
#    }
#    text.20 < tt_content.text.20
#    text.wrap = <div class="csc-textpic-text"> | </div>
#  }
#}


